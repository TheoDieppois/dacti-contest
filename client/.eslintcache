[{"/Users/theo/Desktop/dactiContest/client/src/index.js":"1","/Users/theo/Desktop/dactiContest/client/src/App.js":"2","/Users/theo/Desktop/dactiContest/client/src/history.js":"3","/Users/theo/Desktop/dactiContest/client/src/socketConfig.js":"4","/Users/theo/Desktop/dactiContest/client/src/components/CreateGame.js":"5","/Users/theo/Desktop/dactiContest/client/src/components/GameMenu.js":"6","/Users/theo/Desktop/dactiContest/client/src/components/TypeRacer.js":"7","/Users/theo/Desktop/dactiContest/client/src/components/JoinGame.js":"8","/Users/theo/Desktop/dactiContest/client/src/components/DisplayWords.js":"9","/Users/theo/Desktop/dactiContest/client/src/components/StartBtn.js":"10","/Users/theo/Desktop/dactiContest/client/src/components/CountDown.js":"11","/Users/theo/Desktop/dactiContest/client/src/components/ProgressBar.js":"12","/Users/theo/Desktop/dactiContest/client/src/components/ScoreBoard.js":"13","/Users/theo/Desktop/dactiContest/client/src/components/Form.js":"14"},{"size":197,"mtime":1609782057377,"results":"15","hashOfConfig":"16"},{"size":1275,"mtime":1609789341389,"results":"17","hashOfConfig":"16"},{"size":112,"mtime":1609782694852,"results":"18","hashOfConfig":"16"},{"size":152,"mtime":1609843994588,"results":"19","hashOfConfig":"16"},{"size":1121,"mtime":1609786158481,"results":"20","hashOfConfig":"16"},{"size":686,"mtime":1609837222204,"results":"21","hashOfConfig":"16"},{"size":1056,"mtime":1609837080232,"results":"22","hashOfConfig":"16"},{"size":1534,"mtime":1609787495842,"results":"23","hashOfConfig":"16"},{"size":921,"mtime":1609796720297,"results":"24","hashOfConfig":"16"},{"size":529,"mtime":1609790085937,"results":"25","hashOfConfig":"16"},{"size":512,"mtime":1609790501378,"results":"26","hashOfConfig":"16"},{"size":1343,"mtime":1609798997516,"results":"27","hashOfConfig":"16"},{"size":932,"mtime":1609800008185,"results":"28","hashOfConfig":"16"},{"size":1197,"mtime":1609797517692,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lpjxe",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/theo/Desktop/dactiContest/client/src/index.js",[],["62","63"],"/Users/theo/Desktop/dactiContest/client/src/App.js",[],"/Users/theo/Desktop/dactiContest/client/src/history.js",[],"/Users/theo/Desktop/dactiContest/client/src/socketConfig.js",[],"/Users/theo/Desktop/dactiContest/client/src/components/CreateGame.js",["64"],"import React, { useEffect, useState } from 'react';\nimport socket from '../socketConfig';\n\nconst CreateGame = () => {\n  const [nickName, setNickName] = useState('');\n\n  const onChangeHandler = (e) => {\n    setNickName(e.target.value);\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    socket.emit('create-game', nickName);\n  };\n\n  return (\n    <div className='row'>\n      <div className='col-sm'></div>\n      <div className='col-sm-8'>\n        <h1 className='text-center'>Créer une partie</h1>\n        <form onSubmit={onSubmitHandler}>\n          <div className='form-group'>\n            <label htmlFor='nickName'>Pseudo:</label>\n            <input\n              type='text'\n              name='nickName'\n              value={nickName}\n              onChange={onChangeHandler}\n              placeholder='Votre pseudo'\n              className='form-control'\n            />\n          </div>\n          <button type='submit' className='btn btn-primary'>\n            Créer\n          </button>\n        </form>\n      </div>\n      <div className='col-sm'></div>\n    </div>\n  );\n};\n\nexport default CreateGame;\n","/Users/theo/Desktop/dactiContest/client/src/components/GameMenu.js",[],"/Users/theo/Desktop/dactiContest/client/src/components/TypeRacer.js",[],"/Users/theo/Desktop/dactiContest/client/src/components/JoinGame.js",["65"],"import React, { useEffect, useState } from 'react';\nimport socket from '../socketConfig';\n\nconst JoinGame = () => {\n  const [userInput, setUserInput] = useState({ gameID: '', nickName: '' });\n\n  const onChangeHandler = (e) => {\n    setUserInput({\n      ...userInput,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    console.log(userInput);\n    socket.emit('join-game', userInput);\n  };\n\n  return (\n    <div className='row'>\n      <div className='col-sm'></div>\n      <div className='col-sm-8'>\n        <h1 className='text-center'>Rejoindre une partie</h1>\n        <form onSubmit={onSubmitHandler}>\n          <div className='form-group'>\n            <label htmlFor='gameID'>Game ID:</label>\n            <input\n              type='text'\n              name='gameID'\n              value={userInput.gameID}\n              onChange={onChangeHandler}\n              placeholder='GameID'\n              className='form-control'\n            />\n\n            <label htmlFor='nickName'>Pseudo:</label>\n            <input\n              type='text'\n              name='nickName'\n              value={userInput.nickName}\n              onChange={onChangeHandler}\n              placeholder='Votre pseudo'\n              className='form-control'\n            />\n          </div>\n          <button type='submit' className='btn btn-primary'>\n            Créer\n          </button>\n        </form>\n      </div>\n      <div className='col-sm'></div>\n    </div>\n  );\n};\n\nexport default JoinGame;\n","/Users/theo/Desktop/dactiContest/client/src/components/DisplayWords.js",[],"/Users/theo/Desktop/dactiContest/client/src/components/StartBtn.js",[],"/Users/theo/Desktop/dactiContest/client/src/components/CountDown.js",[],"/Users/theo/Desktop/dactiContest/client/src/components/ProgressBar.js",[],"/Users/theo/Desktop/dactiContest/client/src/components/ScoreBoard.js",["66","67"],"import React from 'react';\n\nconst getScoreboard = (players) => {\n  const scoreBoard = players.filter((player) => player.WPM !== -1);\n  return scoreBoard.sort((a, b) =>\n    a.WPM > b.WPM ? -1 : b.WPM > a.WPM ? 1 : 0\n  );\n};\n\nconst ScoreBoard = ({ players }) => {\n  const scoreBoard = getScoreboard(players);\n  if (scoreBoard.length === 0) {\n    return null;\n  }\n\n  return (\n    <table className='table table-striped my-3'>\n      <thead>\n        <tr>\n          <th scope='col'>#</th>\n          <th scope='col'>User</th>\n          <th scope='col'>WPM</th>\n        </tr>\n      </thead>\n      <tbody>\n        {scoreBoard.map((player, index) => {\n          return (\n            <tr>\n              <th scope='row'>{index + 1}</th>\n              <td scope='row'>{player.nickName}</td>\n              <td scope='row'>{player.WPM}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ScoreBoard;\n","/Users/theo/Desktop/dactiContest/client/src/components/Form.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":30,"column":19,"nodeType":"78","endLine":30,"endColumn":30},{"ruleId":"76","severity":1,"message":"77","line":31,"column":19,"nodeType":"78","endLine":31,"endColumn":30},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","no-global-assign","no-unsafe-negation"]